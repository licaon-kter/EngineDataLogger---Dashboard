// automatically generated by the FlatBuffers compiler, do not modify

package net.xtlive.EDL.AppBuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Bike extends Table {
  public static Bike getRootAsBike(ByteBuffer _bb) { return getRootAsBike(_bb, new Bike()); }
  public static Bike getRootAsBike(ByteBuffer _bb, Bike obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Bike __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int rpm() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float speed() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long odometer() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long trip() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public float systemvoltage() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float batteryvoltage() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float oilTemp() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean blinkLeft() { int o = __offset(18); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean blinkRight() { int o = __offset(20); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int lambda() { int o = __offset(22); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int mapKpa() { int o = __offset(24); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float oilPres() { int o = __offset(26); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public int altRpm() { int o = __offset(28); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String gear() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer gearAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer gearInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }

  public static int createBike(FlatBufferBuilder builder,
      int rpm,
      float speed,
      long odometer,
      long trip,
      float systemvoltage,
      float batteryvoltage,
      float oil_temp,
      boolean blink_left,
      boolean blink_right,
      int lambda,
      int map_kpa,
      float oil_pres,
      int alt_rpm,
      int gearOffset) {
    builder.startObject(14);
    Bike.addGear(builder, gearOffset);
    Bike.addAltRpm(builder, alt_rpm);
    Bike.addOilPres(builder, oil_pres);
    Bike.addMapKpa(builder, map_kpa);
    Bike.addOilTemp(builder, oil_temp);
    Bike.addBatteryvoltage(builder, batteryvoltage);
    Bike.addSystemvoltage(builder, systemvoltage);
    Bike.addTrip(builder, trip);
    Bike.addOdometer(builder, odometer);
    Bike.addSpeed(builder, speed);
    Bike.addRpm(builder, rpm);
    Bike.addLambda(builder, lambda);
    Bike.addBlinkRight(builder, blink_right);
    Bike.addBlinkLeft(builder, blink_left);
    return Bike.endBike(builder);
  }

  public static void startBike(FlatBufferBuilder builder) { builder.startObject(14); }
  public static void addRpm(FlatBufferBuilder builder, int rpm) { builder.addInt(0, rpm, 0); }
  public static void addSpeed(FlatBufferBuilder builder, float speed) { builder.addFloat(1, speed, 0.0f); }
  public static void addOdometer(FlatBufferBuilder builder, long odometer) { builder.addInt(2, (int)odometer, (int)0L); }
  public static void addTrip(FlatBufferBuilder builder, long trip) { builder.addInt(3, (int)trip, (int)0L); }
  public static void addSystemvoltage(FlatBufferBuilder builder, float systemvoltage) { builder.addFloat(4, systemvoltage, 0.0f); }
  public static void addBatteryvoltage(FlatBufferBuilder builder, float batteryvoltage) { builder.addFloat(5, batteryvoltage, 0.0f); }
  public static void addOilTemp(FlatBufferBuilder builder, float oilTemp) { builder.addFloat(6, oilTemp, 0.0f); }
  public static void addBlinkLeft(FlatBufferBuilder builder, boolean blinkLeft) { builder.addBoolean(7, blinkLeft, false); }
  public static void addBlinkRight(FlatBufferBuilder builder, boolean blinkRight) { builder.addBoolean(8, blinkRight, false); }
  public static void addLambda(FlatBufferBuilder builder, int lambda) { builder.addShort(9, (short)lambda, (short)0); }
  public static void addMapKpa(FlatBufferBuilder builder, int mapKpa) { builder.addInt(10, mapKpa, 0); }
  public static void addOilPres(FlatBufferBuilder builder, float oilPres) { builder.addFloat(11, oilPres, 0.0f); }
  public static void addAltRpm(FlatBufferBuilder builder, int altRpm) { builder.addInt(12, altRpm, 0); }
  public static void addGear(FlatBufferBuilder builder, int gearOffset) { builder.addOffset(13, gearOffset, 0); }
  public static int endBike(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishBikeBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedBikeBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

